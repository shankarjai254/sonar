pipeline {
    agent any
    
    tools {
        maven 'Maven_3.8.8_System'     // or your Maven tool name in Jenkins
        jdk 'javajenkins'  
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                // Checkout code from the repository
                checkout scm
                
                // Display information about the checked out code
                sh 'git log -1 --pretty=format:"%h - %an: %s"'
            }
        }
        
        stage('Maven Build') {
            steps {
                // Run Maven build
                sh 'mvn clean package'
            }
            post {
                success {
                    // Archive the artifacts
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
                failure {
                    echo 'Maven build failed'
                }
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                // Run SonarQube analysis
                withSonarQubeEnv('sonarqube') {
                    sh 'mvn sonar:sonar'
                }
            }
            post {
                success {
                    echo 'SonarQube analysis completed successfully'
                }
                failure {
                    echo 'SonarQube analysis failed'
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully'
        }
        failure {
            echo 'Pipeline failed'
        }
        always {
            // Clean workspace after build
            cleanWs()
        }
    }
}
